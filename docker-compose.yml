version: '3'
services:
  nginx:
    build:
      context: docker/nginx
    container_name: inventory_app_nginx
    volumes:
      - .:/var/www/app
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - inventory_app_network
    ports:
      - "${HTTP_EXPO_PORT}:80"

  php-fpm:
    build:
      context: docker/php-fpm
    container_name: inventory_app_php-fpm
    working_dir: /var/www/app
    volumes:
      - .:/var/www/app
      - ./docker/php-fpm/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - inventory_app_network
    environment:
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}

  db:
    image: postgres:15
    container_name: inventory_app_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./docker/postgresql_data:/var/lib/postgresql/data
    networks:
      - inventory_app_network
    ports:
      - "${DB_EXPO_PORT}:5432"

  elasticsearch:
    image: elasticsearch:8.7.0
    container_name: inventory_app_es
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=inventory-cluster
    volumes:
      - ./docker/elasticsearch/es_data:/usr/share/elasticsearch/data
    ports:
      - "${ELASTIC_PORT}:9200"
    networks:
      - inventory_app_network

  elasticsearch-seed:
    container_name: inventory_app_es_seed
    build: ./docker/elasticsearch/seed
#    image: richardsilveira/elasticsearch-seed
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - INDEX_NAME=items
      - USER=elastic
      - PASSWORD=${ELASTIC_PASSWORD}
    networks:
      - inventory_app_network

  kibana:
    image: kibana:8.7.0
    container_name: inventory_app_kibana
    environment:
      - "ELASTICSEARCH_HOSTS=http://${ELASTIC_HOST}:${ELASTIC_PORT}"
    ports:
      - "${KIBANA_PORT}:5601"
    networks:
      - inventory_app_network
    depends_on:
      - elasticsearch
    restart: "unless-stopped"

  logstash:
    build:
      context: docker/logstash
    container_name: inventory_app_logstash
    environment:
      - LOGSTASH_JDBC_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - LOGSTASH_JDBC_DRIVER=org.postgresql.Driver
      - LOGSTASH_JDBC_DRIVER_JAR_LOCATION=/usr/share/logstash/logstash-core/lib/jars/postgresql.jar
      - LOGSTASH_JDBC_USERNAME=${DB_USER}
      - LOGSTASH_JDBC_PASSWORD=${DB_PASSWORD}
      - LOGSTASH_ELASTICSEARCH_HOST=http://elasticsearch:9200
    volumes:
      - type: bind
        source: ./docker/logstash/pipelines.yml
        target: /usr/share/logstash/config/pipelines.yml
      - ./docker/logstash/pipelines:/usr/share/logstash/config/pipelines
    depends_on:
      - db
      - elasticsearch
      - elasticsearch-seed
    networks:
      - inventory_app_network

networks:
  inventory_app_network:
    driver: bridge
